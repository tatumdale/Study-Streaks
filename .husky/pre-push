#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Get current branch name
current_branch=$(git rev-parse --abbrev-ref HEAD)

# Check branch naming convention
validate_branch_name() {
    local branch_name=$1
    
    # Skip validation for main branches
    if [[ "$branch_name" == "master" || "$branch_name" == "develop" ]]; then
        return 0
    fi
    
    # Valid branch patterns
    valid_patterns=(
        "^feature/CPG-[0-9]+-[a-z0-9-]+$"
        "^bugfix/CPG-[0-9]+-[a-z0-9-]+$"
        "^hotfix/CPG-[0-9]+-[a-z0-9-]+$"
        "^release/v[0-9]+\.[0-9]+\.[0-9]+$"
        "^docs/CPG-[0-9]+-[a-z0-9-]+$"
        "^chore/CPG-[0-9]+-[a-z0-9-]+$"
        "^test/CPG-[0-9]+-[a-z0-9-]+$"
    )
    
    for pattern in "${valid_patterns[@]}"; do
        if [[ $branch_name =~ $pattern ]]; then
            return 0
        fi
    done
    
    return 1
}

# Validate branch name
if ! validate_branch_name "$current_branch"; then
    echo "‚ùå Invalid branch name: $current_branch"
    echo ""
    echo "Branch names must follow the convention:"
    echo "  <type>/CPG-<number>-<description>"
    echo ""
    echo "Valid examples:"
    echo "  feature/CPG-123-user-authentication"
    echo "  bugfix/CPG-124-login-validation"
    echo "  hotfix/CPG-125-security-patch"
    echo "  release/v1.2.0"
    echo ""
    echo "Valid types: feature, bugfix, hotfix, release, docs, chore, test"
    echo ""
    exit 1
fi

# Prevent direct push to protected branches
if [[ "$current_branch" == "master" ]]; then
    echo "‚ùå Direct push to master branch is not allowed!"
    echo "Please create a pull request instead."
    exit 1
fi

if [[ "$current_branch" == "develop" ]]; then
    echo "‚ö†Ô∏è  Pushing directly to develop branch."
    echo "Consider using feature branches for new development."
fi

# Run tests before push (for feature branches)
if [[ "$current_branch" == feature/* || "$current_branch" == bugfix/* ]]; then
    echo "üß™ Running tests before push..."
    
    # Run linting
    if ! npm run lint; then
        echo "‚ùå Linting failed. Please fix issues before pushing."
        exit 1
    fi
    
    # Run type checking
    if ! npm run typecheck; then
        echo "‚ùå Type checking failed. Please fix issues before pushing."
        exit 1
    fi
    
    # Run unit tests
    if ! npm run test; then
        echo "‚ùå Tests failed. Please fix failing tests before pushing."
        exit 1
    fi
fi

echo "‚úÖ Pre-push checks passed"